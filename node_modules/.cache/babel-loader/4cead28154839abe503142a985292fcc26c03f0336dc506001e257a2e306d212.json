{"ast":null,"code":"var _jsxFileName = \"/Users/aileen/Documents/Welldone Design Test/src/components/PixelRiver.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './PixelRiver.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PixelRiver = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 200\n  });\n\n  // Sample code snippets that will flow like a river\n  const codeSnippets = ['const river = () => {', '  return flow();', '};', 'function createMagic() {', '  return <Pixel />;', '}', 'const pixels = [];', 'for (let i = 0; i < ∞; i++) {', '  pixels.push(<Code />);', '}', 'const flow = () => {', '  return magic();', '};', 'function animate() {', '  requestAnimationFrame(flow);', '}', 'const digitalRiver = {', '  pixels: flowing,', '  code: beautiful', '};', 'export default river;', 'import { magic } from \"./flow\";', 'const beautiful = true;', 'if (flowing) {', '  createRiver();', '}'];\n  useEffect(() => {\n    const updateDimensions = () => {\n      setDimensions({\n        width: window.innerWidth,\n        height: 200\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    };\n  }, []);\n  useEffect(() => {\n    if (!dimensions.width) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = dimensions.width;\n    canvas.height = dimensions.height;\n    const particles = [];\n    const particleCount = Math.floor(dimensions.width / 20);\n\n    // Create initial particles\n    for (let i = 0; i < particleCount; i++) {\n      particles.push({\n        x: Math.random() * dimensions.width,\n        y: Math.random() * dimensions.height,\n        vx: (Math.random() - 0.5) * 2,\n        vy: Math.random() * 2 + 1,\n        size: Math.random() * 3 + 1,\n        opacity: Math.random() * 0.8 + 0.2,\n        code: codeSnippets[Math.floor(Math.random() * codeSnippets.length)],\n        fontSize: Math.random() * 8 + 6\n      });\n    }\n    const animate = () => {\n      ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n\n      // Create flowing gradient background\n      const gradient = ctx.createLinearGradient(0, 0, dimensions.width, dimensions.height);\n      gradient.addColorStop(0, 'rgba(100, 181, 246, 0.1)');\n      gradient.addColorStop(0.5, 'rgba(66, 165, 245, 0.2)');\n      gradient.addColorStop(1, 'rgba(33, 150, 243, 0.1)');\n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, dimensions.width, dimensions.height);\n      particles.forEach((particle, index) => {\n        // Update position\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Add some wave motion\n        particle.x += Math.sin(particle.y * 0.01) * 0.5;\n\n        // Reset position when particles go off screen\n        if (particle.y > dimensions.height) {\n          particle.y = -20;\n          particle.x = Math.random() * dimensions.width;\n        }\n        if (particle.x > dimensions.width) {\n          particle.x = -100;\n        }\n        if (particle.x < -100) {\n          particle.x = dimensions.width;\n        }\n\n        // Draw particle as code text\n        ctx.font = `${particle.fontSize}px 'Fira Code', 'Monaco', monospace`;\n        ctx.fillStyle = `rgba(100, 181, 246, ${particle.opacity})`;\n        ctx.textAlign = 'left';\n        ctx.fillText(particle.code, particle.x, particle.y);\n\n        // Add glow effect\n        ctx.shadowColor = 'rgba(100, 181, 246, 0.5)';\n        ctx.shadowBlur = 10;\n        ctx.fillText(particle.code, particle.x, particle.y);\n        ctx.shadowBlur = 0;\n      });\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [dimensions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pixel-river-container\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"pixel-river-canvas\",\n      style: {\n        width: '100%',\n        height: `${dimensions.height}px`,\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(PixelRiver, \"2GgsA21x4fM6GrPRYg4irCOPILg=\");\n_c = PixelRiver;\nexport default PixelRiver;\nvar _c;\n$RefreshReg$(_c, \"PixelRiver\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","PixelRiver","_s","canvasRef","animationRef","dimensions","setDimensions","width","height","codeSnippets","updateDimensions","window","innerWidth","addEventListener","removeEventListener","canvas","current","ctx","getContext","particles","particleCount","Math","floor","i","push","x","random","y","vx","vy","size","opacity","code","length","fontSize","animate","clearRect","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","forEach","particle","index","sin","font","textAlign","fillText","shadowColor","shadowBlur","requestAnimationFrame","cancelAnimationFrame","className","children","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aileen/Documents/Welldone Design Test/src/components/PixelRiver.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './PixelRiver.css';\n\nconst PixelRiver = () => {\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 200 });\n\n  // Sample code snippets that will flow like a river\n  const codeSnippets = [\n    'const river = () => {',\n    '  return flow();',\n    '};',\n    'function createMagic() {',\n    '  return <Pixel />;',\n    '}',\n    'const pixels = [];',\n    'for (let i = 0; i < ∞; i++) {',\n    '  pixels.push(<Code />);',\n    '}',\n    'const flow = () => {',\n    '  return magic();',\n    '};',\n    'function animate() {',\n    '  requestAnimationFrame(flow);',\n    '}',\n    'const digitalRiver = {',\n    '  pixels: flowing,',\n    '  code: beautiful',\n    '};',\n    'export default river;',\n    'import { magic } from \"./flow\";',\n    'const beautiful = true;',\n    'if (flowing) {',\n    '  createRiver();',\n    '}'\n  ];\n\n  useEffect(() => {\n    const updateDimensions = () => {\n      setDimensions({\n        width: window.innerWidth,\n        height: 200\n      });\n    };\n\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!dimensions.width) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    canvas.width = dimensions.width;\n    canvas.height = dimensions.height;\n\n    const particles = [];\n    const particleCount = Math.floor(dimensions.width / 20);\n\n    // Create initial particles\n    for (let i = 0; i < particleCount; i++) {\n      particles.push({\n        x: Math.random() * dimensions.width,\n        y: Math.random() * dimensions.height,\n        vx: (Math.random() - 0.5) * 2,\n        vy: Math.random() * 2 + 1,\n        size: Math.random() * 3 + 1,\n        opacity: Math.random() * 0.8 + 0.2,\n        code: codeSnippets[Math.floor(Math.random() * codeSnippets.length)],\n        fontSize: Math.random() * 8 + 6\n      });\n    }\n\n    const animate = () => {\n      ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n      \n      // Create flowing gradient background\n      const gradient = ctx.createLinearGradient(0, 0, dimensions.width, dimensions.height);\n      gradient.addColorStop(0, 'rgba(100, 181, 246, 0.1)');\n      gradient.addColorStop(0.5, 'rgba(66, 165, 245, 0.2)');\n      gradient.addColorStop(1, 'rgba(33, 150, 243, 0.1)');\n      \n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, dimensions.width, dimensions.height);\n\n      particles.forEach((particle, index) => {\n        // Update position\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Add some wave motion\n        particle.x += Math.sin(particle.y * 0.01) * 0.5;\n\n        // Reset position when particles go off screen\n        if (particle.y > dimensions.height) {\n          particle.y = -20;\n          particle.x = Math.random() * dimensions.width;\n        }\n        if (particle.x > dimensions.width) {\n          particle.x = -100;\n        }\n        if (particle.x < -100) {\n          particle.x = dimensions.width;\n        }\n\n        // Draw particle as code text\n        ctx.font = `${particle.fontSize}px 'Fira Code', 'Monaco', monospace`;\n        ctx.fillStyle = `rgba(100, 181, 246, ${particle.opacity})`;\n        ctx.textAlign = 'left';\n        ctx.fillText(particle.code, particle.x, particle.y);\n\n        // Add glow effect\n        ctx.shadowColor = 'rgba(100, 181, 246, 0.5)';\n        ctx.shadowBlur = 10;\n        ctx.fillText(particle.code, particle.x, particle.y);\n        ctx.shadowBlur = 0;\n      });\n\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [dimensions]);\n\n  return (\n    <div className=\"pixel-river-container\">\n      <canvas\n        ref={canvasRef}\n        className=\"pixel-river-canvas\"\n        style={{\n          width: '100%',\n          height: `${dimensions.height}px`,\n          display: 'block'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PixelRiver;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}